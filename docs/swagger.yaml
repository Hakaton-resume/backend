swagger: '2.0'
info:
  title: Карьерный трекер
  description: ''
  version: v1
host: 127.0.0.1:8000
schemes:
  - http
basePath: /api/auth
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /jwt/create/:
    post:
      operationId: jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPair'
      tags:
        - jwt
    parameters: []
  /jwt/refresh/:
    post:
      operationId: jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
        - jwt
    parameters: []
  /jwt/verify/:
    post:
      operationId: jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenVerify'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenVerify'
      tags:
        - jwt
    parameters: []
  /users/:
    get:
      operationId: users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - users
    post:
      operationId: users_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserCreate'
      tags:
        - users
    parameters: []
  /users/activation/:
    post:
      operationId: users_activation
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Activation'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Activation'
      tags:
        - users
    parameters: []
  /users/me/:
    get:
      operationId: users_me_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - users
    put:
      operationId: users_me_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    patch:
      operationId: users_me_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    delete:
      operationId: users_me_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - users
    parameters: []
  /users/resend_activation/:
    post:
      operationId: users_resend_activation
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - users
    parameters: []
  /users/reset_password/:
    post:
      operationId: users_reset_password
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - users
    parameters: []
  /users/reset_password_confirm/:
    post:
      operationId: users_reset_password_confirm
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
        - users
    parameters: []
  /users/reset_username/:
    post:
      operationId: users_reset_username
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendEmailReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SendEmailReset'
      tags:
        - users
    parameters: []
  /users/reset_username_confirm/:
    post:
      operationId: users_reset_username_confirm
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UsernameResetConfirm'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UsernameResetConfirm'
      tags:
        - users
    parameters: []
  /users/set_password/:
    post:
      operationId: users_set_password
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetPassword'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetPassword'
      tags:
        - users
    parameters: []
  /users/set_username/:
    post:
      operationId: users_set_username
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetUsername'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SetUsername'
      tags:
        - users
    parameters: []
  /users/{id}/:
    get:
      operationId: users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    put:
      operationId: users_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    patch:
      operationId: users_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    delete:
      operationId: users_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - users
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
definitions:
  TokenObtainPair:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  TokenVerify:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  User:
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        readOnly: true
        minLength: 1
  UserCreate:
    required:
      - username
      - password
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      id:
        title: ID
        type: integer
        readOnly: true
      password:
        title: Password
        type: string
        minLength: 1
  Activation:
    required:
      - uid
      - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  SendEmailReset:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
      - uid
      - token
      - new_password
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password:
        title: New password
        type: string
        minLength: 1
  UsernameResetConfirm:
    required:
      - new_username
    type: object
    properties:
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  SetPassword:
    required:
      - new_password
      - current_password
    type: object
    properties:
      new_password:
        title: New password
        type: string
        minLength: 1
      current_password:
        title: Current password
        type: string
        minLength: 1
  SetUsername:
    required:
      - current_password
      - new_username
    type: object
    properties:
      current_password:
        title: Current password
        type: string
        minLength: 1
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
